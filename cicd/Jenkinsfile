pipeline {
  agent any

  environment {
    TF_DIR          = "terraform"
    VAULT_PASS_FILE = "ansible/vault.pass"
  }

  stages {
    stage('Checkout') { steps { checkout scm } }

    stage('Lint')     { steps { sh 'make lint' } }

    stage('Plan') {
      steps {
        withCredentials([string(credentialsId: 'proxmox-token', variable: 'PM_SECRET')]) {
        withEnv(['TF_VAR_pm_api_token_secret=' + env.PM_SECRET]) {
        sh 'make plan'
      }
    }
  }
}

    stage('Security Policy') {
      steps { sh "opa eval --format pretty --fail-defined -i ${TF_DIR} -d terraform/opa-policies" }
    }

    stage('Apply') {
      when { branch 'main' }
      steps {
        withCredentials([string(credentialsId: 'proxmox-token', variable: 'PM_SECRET')]) {
          withEnv(['TF_VAR_pm_api_token_secret=' + env.PM_SECRET]) {
            sh 'make apply'
          }
        }
      }
}
  }

  post {
    always {
      archiveArtifacts artifacts: 'security/reports/**/*', allowEmptyArchive: true
      cleanWs()
    }
  }
}